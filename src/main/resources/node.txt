Link website về mấy ý tưởng project có thể làm thêm để cho vào cv: 
https://www.geeksforgeeks.org/java-projects/

* Thứ tự những nhiệm vụ cần phải làm: 
* Để tạo liên kết giữa 2 bảng dữ liệu phòng ban và nhân viên thì mình sẽ dùng đến @onetomany và @manytoone 
cái này sẽ cần phải nghiên cứu 1 lúc mới được.(Đã thành công)

* Sau khi làm xong cái chức năng đăng nhập với đăng ký thì sẽ chuyển trang đăng nhập sẽ là trang hiển thị đầu tiên
và sau khi đăng nhập thành công thì mới chuyển đến trang chủ

* Sửa cái hiện id. (Xong)

* Chức năng bổ sung: Sắp xếp theo tên, id, ...; Phân trang; Xem chi tiết nhân viên, phòng ban; Tìm kiếm nhân viên theo id; 
Tính lương và cật nhật lương, Hiện bảng thông tin các nhân viên trong phòng ban.

* Bo sung chi tiet luong cho nhan vien va them phan danh sach tai khoan nguoi dung cho admin.

* Sửa chức năng phân trang, sắp xếp và sửa phòng ban (Xong)

* Làm chức năng đăng nhập và đăng xuất cho người dùng. (Xong)

* Tạo khả năng phân biệt tài khoản admin và user (Xong)

* Bổ sung chức năng phân quyền

* Tạo chức năng hiển thị lịch biểu và giao nhiệm vụ cho nhân viên.

* Tạo chức năng nhắn tin.

Ghi chú: Phần tìm kiếm trong lương thì sẽ có cả tìm mã nhân viên, mã lương và tên nhân viên
Đã thêm được phần sửa vs thêm lương ở nhân viên rồi
Giờ sẽ cần chạy thử xem việc thêm, hiện lương
Khong thay dc thuoc tinh idnv o 2 bang luong
va phong ban, phan sua ma luong o nv thi van on va hien len dc.

* Phần tìm kiếm ở trang phòng ban vẫn chưa hoạt động đc nên sẽ để tạm đấy vậy
* khi nào xử lý xong việc hiện danh sách nhân viên trong phòng ban thì sẽ bắt
* đâu xử lý

* Bổ sung nốt các chức năng còn lại cho tài khoản sau khi đã sửa đc lỗi đăng nhập và chức
năng cập nhật ảnh.

Cần sửa lại cái phần kiểm tra mật khẩu trong phần update account của nhân viên.

Cập nhật được nốt phần phân trang vs sắp xếp rồi nhưng vẫn chưa hoàn chỉnh sẽ cần chỉnh sửa
nốt phần đường link ở trang accountspage rồi hẵng chạy thử.

Nên chạy thử debug với phần này trước để xem lỗi như thế nào, xong nếu không được thì mình sẽ sử dụng postman 
để tìm lỗi.

Đã thử thêm 1 số dòng lệnh, cần chạy thử để xem có sửa được lỗi không

Testing a login REST API service using Postman is a common practice in software development. Here's a general outline of the steps you can follow:

Set Up Postman Environment:
- Open Postman and create a new request.
- Set the request type to "POST" since you'll be sending data to the server.
- Enter the endpoint URL of the login API service.
Add Request Body:
- In the request body section, select "raw" and choose the format (e.g., JSON) in which you'll be sending the data.
- Enter the required login credentials (e.g., username and password) in the request body.
Set Headers:
- Add any necessary headers to the request, such as "Content-Type" and "Accept".
Send the Request:
- Click the "Send" button to execute the request.
Review the Response:
- Check the response from the server to see if the login was successful.
- Inspect the response status code, headers, and body for relevant information.
Handle Authentication Tokens (if applicable):
- If the API returns an authentication token upon successful login, you can capture and use it in subsequent requests by storing it in a variable or environment.
Test Different Scenarios:
- Test various scenarios such as valid login credentials, invalid credentials, and edge cases to ensure the API behaves as expected in different situations.
By following these steps, you can effectively test a login REST API service using Postman. Keep in mind that the specific details may vary based on the API's requirements and authentication mechanisms.