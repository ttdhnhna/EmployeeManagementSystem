* Thứ tự những nhiệm vụ cần phải làm: 
* Để tạo liên kết giữa 2 bảng dữ liệu phòng ban và nhân viên thì mình sẽ dùng đến @onetomany và @manytoone 
cái này sẽ cần phải nghiên cứu 1 lúc mới được.(Đã thành công)

* Sau khi làm xong cái chức năng đăng nhập với đăng ký thì sẽ chuyển trang đăng nhập sẽ là trang hiển thị đầu tiên
và sau khi đăng nhập thành công thì mới chuyển đến trang chủ (Xong)

* Sửa cái hiện id. (Xong)

* Chức năng bổ sung: Sắp xếp theo tên, id, ...; Phân trang; Xem chi tiết nhân viên, phòng ban; Tìm kiếm nhân viên theo id; 
Tính lương và cật nhật lương, Hiện bảng thông tin các nhân viên trong phòng ban. (Xong)

* Sửa chức năng phân trang, sắp xếp và sửa phòng ban (Xong)

* Làm chức năng đăng nhập và đăng xuất cho người dùng. (Xong)

* Phần tìm kiếm trong lương thì sẽ có cả tìm mã nhân viên, mã lương và tên nhân viên

* Phần tìm kiếm ở trang phòng ban và lương vẫn chưa hoạt động 

* Làm chức năng ghi nhớ thông tin đăng nhập và quên mật khẩu. (Xong)

* Làm phần định dạng tiền tệ cho các trang lương.(Xong)

* Làm phần hiện ảnh nhân viên ở chi tiết phòng ban (Xong)

* Bổ sung footer cho trang web (Đã sửa xong)

De lien ket csdl vs render thi can bo sung trong file pom:
        <dependency>
			<groupId>org.springframework.session</groupId>
			<artifactId>spring-session-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>

Va loai bo
        <!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency> -->

Con trong file property thi
trong phan spring.datasource.url = lay link external va chi lay tu phan dpg thoi
bo sung:
    server.tomcat.accesslog.enabled=true
    spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

Nhiệm vụ mới: Tạo các chức năng sau:

* Lịch sử hoạt động (Audit Log):
Mô tả: Ghi lại các hoạt động quan trọng của người dùng như đăng nhập, chỉnh sửa, xóa dữ liệu.
Lợi ích: Tăng cường bảo mật và giúp theo dõi các thay đổi trên hệ thống.

* Hệ thống thông báo (Notifications):
Mô tả: Thông báo khi có sự kiện quan trọng như cập nhật lương, đăng ký thành công, v.v.
Lợi ích: Cải thiện trải nghiệm người dùng bằng cách cung cấp thông tin kịp thời.

* Hỗ trợ đa ngôn ngữ (Multi-Language Support):
Mô tả: Cung cấp giao diện bằng nhiều ngôn ngữ khác nhau để phục vụ đa dạng người dùng.
Lợi ích: Mở rộng phạm vi sử dụng của ứng dụng cho người dùng ở nhiều quốc gia.

Nếu làm được thì thêm mấy chức năng này:

Quản lý chấm công (Attendance Management):
Mô tả: Ghi lại thời gian làm việc, giờ vào, giờ ra của nhân viên.
Lợi ích: Hỗ trợ việc tính toán lương và theo dõi thời gian làm việc chính xác.

Hệ thống phê duyệt (Approval Workflow):
Mô tả: Thiết lập quy trình phê duyệt cho các yêu cầu như nghỉ phép, cập nhật thông tin cá nhân.
Lợi ích: Đảm bảo các quyết định quan trọng được thông qua bởi người có thẩm quyền.

Batching in the context of logging entries refers to the practice of grouping multiple log entries into a single batch, which is then persisted to the database in one go, rather than saving each entry individually. This can significantly improve performance by reducing the number of database operations, especially when dealing with a large volume of logs.

### Why Batching is Important
- **Performance**: Reduces the number of database round-trips, lowering latency and increasing throughput.
- **Resource Efficiency**: Minimizes database connections and transaction overhead.
- **Consistency**: Ensures that a group of log entries is either all saved or none at all, improving data integrity.

### 2. **Implementing Batching in Spring Boot**

Here's how you can implement batching for log entries in your Spring Boot project:

#### 1. **Enable JDBC Batching**
You can configure your `application.properties` or `application.yml` to enable batching for your entire JPA/Hibernate setup:

**`application.properties`**:
```properties
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true
```

- `hibernate.jdbc.batch_size`: Defines the batch size. Adjust according to your needs.
- `hibernate.order_inserts`: Orders insert statements in a batch to reduce deadlocks in the database.
- `hibernate.order_updates`: Orders update statements in a batch.
- `hibernate.batch_versioned_data`: Enables batching of versioned entities (entities with optimistic locking).

#### 2. **Batching Log Entries in Code**

If you want more control, you can manually manage batching in your service or repository layer:

```java
@Service
public class AuditLogService {

    @Autowired
    private AuditLogRepository auditLogRepository;

    @Transactional
    public void saveLogsInBatch(List<AuditLog> logs) {
        int batchSize = 50; // Adjust as needed
        for (int i = 0; i < logs.size(); i++) {
            auditLogRepository.save(logs.get(i));
            if (i % batchSize == 0 && i > 0) {
                auditLogRepository.flush(); // Flush to the database
                auditLogRepository.clear(); // Clear the persistence context to avoid memory issues
            }
        }
    }
}
```

- **`saveLogsInBatch` Method**: This method saves the list of logs in batches. The `flush()` method ensures that the batch is persisted to the database, and `clear()` removes the entities from the persistence context to avoid memory issues.

#### 3. **Inserting Logs in Batches**

If you need to insert logs in a batch, you can do it like this:

```java
List<AuditLog> logs = new ArrayList<>();
// Add logs to the list
auditLogService.saveLogsInBatch(logs);
```

### 3. **Using `saveAll` Method**
Alternatively, you can use the `saveAll` method from the `JpaRepository` to save a list of logs in one go:

```java
public void saveLogs(List<AuditLog> logs) {
    auditLogRepository.saveAll(logs);
}
```

However, this approach does not allow for finer control over the batch size and persistence context management.

### 4. **Configure Transaction Management**
Ensure that your batching operations are wrapped in a transaction to maintain consistency:

```java
@Transactional
public void batchProcessLogs(List<AuditLog> logs) {
    saveLogsInBatch(logs);
}
```

### Conclusion
Batching log entries is a powerful technique to enhance the performance and efficiency of your
logging system, especially when dealing with a high volume of logs. By leveraging Hibernate's
batching capabilities or implementing custom batch processing logic, you can significantly
reduce the load on your database and improve the overall performance of your application.

Da sua duoc loi thong bao roi gio se bo sung phan link dan den chinh thong bao day trong phan
trang auditlogpage de nguoi dung co the xem hoac co khi nen tao phan trang chi tiet lich su
Tao phan hien so thong bao moi
Va sau khi xong cai nay minh se bo sung them phan chinh sua nhung cai gi va xoa nhan vien,
phong ban co ten gi luong se co hsl la bao nhieu (Hoac phan nay se la phan chi tiet lich
su khi nguoi dung nhan vao).
Voi ca nen tao phan css vs js de hien giao dien khi co thong bao moi.

2024-08-27 17:44:34.343 DEBUG 9500 --- [nio-8080-exec-1] org.hibernate.SQL                        : select user0_.id_user as id_user1_5_, user0_.email as email2_5_, user0_.hoten as hoten3_5_, user0_.password as password4_5_, user0_.reset_password_token as reset_pa5_5_ from tbl_user user0_ where user0_.email=?
2024-08-27 17:44:34.386 TRACE 9500 --- [nio-8080-exec-1] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [thanhdatduong24102002@gmail.com]
2024-08-27 17:44:34.566 DEBUG 9500 --- [nio-8080-exec-1] org.hibernate.SQL                        : select user0_.id_user as id_user1_5_, user0_.email as email2_5_, user0_.hoten as hoten3_5_, user0_.password as password4_5_, user0_.reset_password_token as reset_pa5_5_ from tbl_user user0_ where user0_.email=?
2024-08-27 17:44:34.567 TRACE 9500 --- [nio-8080-exec-1] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [VARCHAR] - [thanhdatduong24102002@gmail.com]
2024-08-27 17:44:34.866 DEBUG 9500 --- [nio-8080-exec-1] org.hibernate.SQL                        : insert into audit_log (act, idluong, idnv, idpb, id_user, ngayth) values (?, ?, ?, ?, ?, ?)
2024-08-27 17:44:34.875 TRACE 9500 --- [nio-8080-exec-1] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [INTEGER] - [0]
2024-08-27 17:44:34.876 TRACE 9500 --- [nio-8080-exec-1] o.h.type.descriptor.sql.BasicBinder      : binding parameter [2] as [BIGINT] - [null]
2024-08-27 17:44:34.876 TRACE 9500 --- [nio-8080-exec-1] o.h.type.descriptor.sql.BasicBinder      : binding parameter [3] as [BIGINT] - [null]
2024-08-27 17:44:34.876 TRACE 9500 --- [nio-8080-exec-1] o.h.type.descriptor.sql.BasicBinder      : binding parameter [4] as [BIGINT] - [null]
2024-08-27 17:44:34.877 TRACE 9500 --- [nio-8080-exec-1] o.h.type.descriptor.sql.BasicBinder      : binding parameter [5] as [BIGINT] - [1]
2024-08-27 17:44:34.878 TRACE 9500 --- [nio-8080-exec-1] o.h.type.descriptor.sql.BasicBinder      : binding parameter [6] as [TIMESTAMP] - [2024-08-27T17:44:34.778771300]
2024-08-27 17:44:35.041  WARN 9500 --- [nio-8080-exec-1] o.a.c.util.SessionIdGeneratorBase        : Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [102] milliseconds.
2024-08-27 17:44:35.264 DEBUG 9500 --- [nio-8080-exec-1] org.hibernate.SQL                        : select user0_.id_user as id_user1_5_0_, user0_.email as email2_5_0_, user0_.hoten as hoten3_5_0_, user0_.password as password4_5_0_, user0_.reset_password_token as reset_pa5_5_0_ from tbl_user user0_ where user0_.id_user=?
2024-08-27 17:44:35.264 TRACE 9500 --- [nio-8080-exec-1] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [BIGINT] - [1]
2024-08-27 17:44:35.306 DEBUG 9500 --- [nio-8080-exec-1] org.hibernate.SQL                        : select employee0_.idnv as idnv1_3_, employee0_.anh as anh2_3_, employee0_.chucvu as chucvu3_3_, employee0_.dantoc as dantoc4_3_, employee0_.email as email5_3_, employee0_.gt as gt6_3_, employee0_.hoten as hoten7_3_, employee0_.id_luong as id_luon11_3_, employee0_.id_pb as id_pb12_3_, employee0_.id_user as id_user13_3_, employee0_.ngaysinh as ngaysinh8_3_, employee0_.quequan as quequan9_3_, employee0_.sdt as sdt10_3_ from tbl_employee employee0_ where employee0_.id_user=? order by employee0_.idnv asc offset 0 rows fetch next ? rows only
2024-08-27 17:44:35.311 TRACE 9500 --- [nio-8080-exec-1] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [BIGINT] - [1]
2024-08-27 17:44:35.379 DEBUG 9500 --- [nio-8080-exec-1] org.hibernate.SQL                        : select count(employee0_.idnv) as col_0_0_ from tbl_employee employee0_ where employee0_.id_user=?
2024-08-27 17:44:35.380 TRACE 9500 --- [nio-8080-exec-1] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [BIGINT] - [1]
2024-08-27 17:44:35.406 DEBUG 9500 --- [nio-8080-exec-1] org.hibernate.SQL                        : select auditlog0_.id_log as id_log1_0_, auditlog0_.act as act2_0_, auditlog0_.idluong as idluong3_0_, auditlog0_.idnv as idnv4_0_, auditlog0_.idpb as idpb5_0_, auditlog0_.id_user as id_user7_0_, auditlog0_.ngayth as ngayth6_0_ from audit_log auditlog0_ where auditlog0_.id_user=? order by auditlog0_.ngayth desc offset 0 rows fetch next ? rows only
2024-08-27 17:44:35.409 TRACE 9500 --- [nio-8080-exec-1] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [BIGINT] - [1]
2024-08-27 17:44:39.604 DEBUG 9500 --- [nio-8080-exec-3] org.hibernate.SQL                        : select user0_.id_user as id_user1_5_0_, user0_.email as email2_5_0_, user0_.hoten as hoten3_5_0_, user0_.password as password4_5_0_, user0_.reset_password_token as reset_pa5_5_0_ from tbl_user user0_ where user0_.id_user=?
2024-08-27 17:44:39.604 TRACE 9500 --- [nio-8080-exec-3] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [BIGINT] - [1]
2024-08-27 17:44:39.614 DEBUG 9500 --- [nio-8080-exec-3] org.hibernate.SQL                        : select auditlog0_.id_log as id_log1_0_, auditlog0_.act as act2_0_, auditlog0_.idluong as idluong3_0_, auditlog0_.idnv as idnv4_0_, auditlog0_.idpb as idpb5_0_, auditlog0_.id_user as id_user7_0_, auditlog0_.ngayth as ngayth6_0_ from audit_log auditlog0_ where auditlog0_.id_user=? order by auditlog0_.ngayth desc offset 0 rows fetch next ? rows only
2024-08-27 17:44:39.619 TRACE 9500 --- [nio-8080-exec-3] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [BIGINT] - [1]
2024-08-27 17:44:39.662 DEBUG 9500 --- [nio-8080-exec-3] org.hibernate.SQL                        : select employee0_.idnv as idnv1_3_0_, employee0_.anh as anh2_3_0_, employee0_.chucvu as chucvu3_3_0_, employee0_.dantoc as dantoc4_3_0_, employee0_.email as email5_3_0_, employee0_.gt as gt6_3_0_, employee0_.hoten as hoten7_3_0_, employee0_.id_luong as id_luon11_3_0_, employee0_.id_pb as id_pb12_3_0_, employee0_.id_user as id_user13_3_0_, employee0_.ngaysinh as ngaysinh8_3_0_, employee0_.quequan as quequan9_3_0_, employee0_.sdt as sdt10_3_0_ from tbl_employee employee0_ where employee0_.idnv=?
2024-08-27 17:44:39.664 TRACE 9500 --- [nio-8080-exec-3] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [BIGINT] - [1]
2024-08-27 17:44:39.982 DEBUG 9500 --- [nio-8080-exec-3] org.hibernate.SQL                        : select department0_.id_pb as id_pb1_2_0_, department0_.diachi as diachi2_2_0_, department0_.id_user as id_user5_2_0_, department0_.sdt as sdt3_2_0_, department0_.tenpb as tenpb4_2_0_ from tbl_department department0_ where department0_.id_pb=?
2024-08-27 17:44:39.982 TRACE 9500 --- [nio-8080-exec-3] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [BIGINT] - [1]
2024-08-27 17:44:40.072 DEBUG 9500 --- [nio-8080-exec-3] org.hibernate.SQL                        : select salary0_.id_luong as id_luong1_4_0_, salary0_.baohiem as baohiem2_4_0_, salary0_.hsl as hsl3_4_0_, salary0_.phucap as phucap4_4_0_, salary0_.tienno as tienno5_4_0_, salary0_.tongluong as tongluon6_4_0_, salary0_.truluong as truluong7_4_0_ from tbl_salary salary0_ where salary0_.id_luong=?
2024-08-27 17:44:40.075 TRACE 9500 --- [nio-8080-exec-3] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [BIGINT] - [1]
2024-08-27 17:45:13.273 DEBUG 9500 --- [nio-8080-exec-5] org.hibernate.SQL                        : select employee0_.idnv as idnv1_3_0_, employee0_.anh as anh2_3_0_, employee0_.chucvu as chucvu3_3_0_, employee0_.dantoc as dantoc4_3_0_, employee0_.email as email5_3_0_, employee0_.gt as gt6_3_0_, employee0_.hoten as hoten7_3_0_, employee0_.id_luong as id_luon11_3_0_, employee0_.id_pb as id_pb12_3_0_, employee0_.id_user as id_user13_3_0_, employee0_.ngaysinh as ngaysinh8_3_0_, employee0_.quequan as quequan9_3_0_, employee0_.sdt as sdt10_3_0_ from tbl_employee employee0_ where employee0_.idnv=?
2024-08-27 17:45:13.273 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [BIGINT] - [1]
2024-08-27 17:45:13.291 DEBUG 9500 --- [nio-8080-exec-5] org.hibernate.SQL                        : select user0_.id_user as id_user1_5_0_, user0_.email as email2_5_0_, user0_.hoten as hoten3_5_0_, user0_.password as password4_5_0_, user0_.reset_password_token as reset_pa5_5_0_ from tbl_user user0_ where user0_.id_user=?
2024-08-27 17:45:13.292 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [BIGINT] - [1]
2024-08-27 17:45:13.316 DEBUG 9500 --- [nio-8080-exec-5] org.hibernate.SQL                        : select department0_.id_pb as id_pb1_2_0_, department0_.diachi as diachi2_2_0_, department0_.id_user as id_user5_2_0_, department0_.sdt as sdt3_2_0_, department0_.tenpb as tenpb4_2_0_ from tbl_department department0_ where department0_.id_pb=?
2024-08-27 17:45:13.316 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [BIGINT] - [1]
2024-08-27 17:45:13.368 DEBUG 9500 --- [nio-8080-exec-5] org.hibernate.SQL                        : insert into audit_log (act, idluong, idnv, idpb, id_user, ngayth) values (?, ?, ?, ?, ?, ?)
2024-08-27 17:45:13.368 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [INTEGER] - [3]
2024-08-27 17:45:13.369 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [2] as [BIGINT] - [null]
2024-08-27 17:45:13.369 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [3] as [BIGINT] - [1]
2024-08-27 17:45:13.369 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [4] as [BIGINT] - [null]
2024-08-27 17:45:13.369 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [5] as [BIGINT] - [1]
2024-08-27 17:45:13.369 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [6] as [TIMESTAMP] - [2024-08-27T17:45:13.368860500]
2024-08-27 17:45:13.394 DEBUG 9500 --- [nio-8080-exec-5] org.hibernate.SQL                        : select idlog0_.idnv as idnv4_0_1_, idlog0_.id_log as id_log1_0_1_, idlog0_.id_log as id_log1_0_0_, idlog0_.act as act2_0_0_, idlog0_.idluong as idluong3_0_0_, idlog0_.idnv as idnv4_0_0_, idlog0_.idpb as idpb5_0_0_, idlog0_.id_user as id_user7_0_0_, idlog0_.ngayth as ngayth6_0_0_ from audit_log idlog0_ where idlog0_.idnv=?
2024-08-27 17:45:13.397 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [BIGINT] - [1]
2024-08-27 17:45:13.418 DEBUG 9500 --- [nio-8080-exec-5] org.hibernate.SQL                        : update tbl_employee set anh=?, chucvu=?, dantoc=?, email=?, gt=?, hoten=?, id_luong=?, id_pb=?, id_user=?, ngaysinh=?, quequan=?, sdt=? where idnv=?
2024-08-27 17:45:13.419 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [CLOB] - [null]
2024-08-27 17:45:13.419 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [2] as [VARCHAR] - [Quan lý]
2024-08-27 17:45:13.419 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [3] as [VARCHAR] - [Kinh]
2024-08-27 17:45:13.419 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [4] as [VARCHAR] - [thanhdatduong24102001@gmail.com]
2024-08-27 17:45:13.420 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [5] as [VARCHAR] - [Nam]
2024-08-27 17:45:13.421 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [6] as [VARCHAR] - [Duong Thanh Dat]
2024-08-27 17:45:13.421 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [7] as [BIGINT] - [1]
2024-08-27 17:45:13.421 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [8] as [BIGINT] - [1]
2024-08-27 17:45:13.421 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [9] as [BIGINT] - [1]
2024-08-27 17:45:13.421 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [10] as [VARCHAR] - [24-10-2001]
2024-08-27 17:45:13.421 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [11] as [VARCHAR] - [Hà Noi]
2024-08-27 17:45:13.421 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [12] as [VARCHAR] - [0928789025]
2024-08-27 17:45:13.421 TRACE 9500 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [13] as [BIGINT] - [1]
2024-08-27 17:45:13.716 DEBUG 9500 --- [nio-8080-exec-6] org.hibernate.SQL                        : select user0_.id_user as id_user1_5_0_, user0_.email as email2_5_0_, user0_.hoten as hoten3_5_0_, user0_.password as password4_5_0_, user0_.reset_password_token as reset_pa5_5_0_ from tbl_user user0_ where user0_.id_user=?
2024-08-27 17:45:13.717 TRACE 9500 --- [nio-8080-exec-6] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [BIGINT] - [1]
2024-08-27 17:45:13.725 DEBUG 9500 --- [nio-8080-exec-6] org.hibernate.SQL                        : select employee0_.idnv as idnv1_3_, employee0_.anh as anh2_3_, employee0_.chucvu as chucvu3_3_, employee0_.dantoc as dantoc4_3_, employee0_.email as email5_3_, employee0_.gt as gt6_3_, employee0_.hoten as hoten7_3_, employee0_.id_luong as id_luon11_3_, employee0_.id_pb as id_pb12_3_, employee0_.id_user as id_user13_3_, employee0_.ngaysinh as ngaysinh8_3_, employee0_.quequan as quequan9_3_, employee0_.sdt as sdt10_3_ from tbl_employee employee0_ where employee0_.id_user=? order by employee0_.idnv asc offset 0 rows fetch next ? rows only
2024-08-27 17:45:13.726 TRACE 9500 --- [nio-8080-exec-6] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [BIGINT] - [1]
2024-08-27 17:45:13.736 DEBUG 9500 --- [nio-8080-exec-6] org.hibernate.SQL                        : select count(employee0_.idnv) as col_0_0_ from tbl_employee employee0_ where employee0_.id_user=?
2024-08-27 17:45:13.736 TRACE 9500 --- [nio-8080-exec-6] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [BIGINT] - [1]
2024-08-27 17:45:13.747 DEBUG 9500 --- [nio-8080-exec-6] org.hibernate.SQL                        : select auditlog0_.id_log as id_log1_0_, auditlog0_.act as act2_0_, auditlog0_.idluong as idluong3_0_, auditlog0_.idnv as idnv4_0_, auditlog0_.idpb as idpb5_0_, auditlog0_.id_user as id_user7_0_, auditlog0_.ngayth as ngayth6_0_ from audit_log auditlog0_ where auditlog0_.id_user=? order by auditlog0_.ngayth desc offset 0 rows fetch next ? rows only
2024-08-27 17:45:13.747 TRACE 9500 --- [nio-8080-exec-6] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [BIGINT] - [1]