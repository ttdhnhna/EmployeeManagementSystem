* Thứ tự những nhiệm vụ cần phải làm: 
* Để tạo liên kết giữa 2 bảng dữ liệu phòng ban và nhân viên thì mình sẽ dùng đến @onetomany và @manytoone 
cái này sẽ cần phải nghiên cứu 1 lúc mới được.(Đã thành công)

* Sau khi làm xong cái chức năng đăng nhập với đăng ký thì sẽ chuyển trang đăng nhập sẽ là trang hiển thị đầu tiên
và sau khi đăng nhập thành công thì mới chuyển đến trang chủ (Xong)

* Sửa cái hiện id. (Xong)

* Chức năng bổ sung: Sắp xếp theo tên, id, ...; Phân trang; Xem chi tiết nhân viên, phòng ban; Tìm kiếm nhân viên theo id; 
Tính lương và cật nhật lương, Hiện bảng thông tin các nhân viên trong phòng ban. (Xong)

* Sửa chức năng phân trang, sắp xếp và sửa phòng ban (Xong)

* Làm chức năng đăng nhập và đăng xuất cho người dùng. (Xong)

* Phần tìm kiếm trong lương thì sẽ có cả tìm mã nhân viên, mã lương và tên nhân viên

* Phần tìm kiếm ở trang phòng ban và lương vẫn chưa hoạt động 

* Làm chức năng ghi nhớ thông tin đăng nhập và quên mật khẩu. (Xong)

* Làm phần định dạng tiền tệ cho các trang lương.(Xong)

* Làm phần hiện ảnh nhân viên ở chi tiết phòng ban (Xong)

* Bổ sung footer cho trang web (Đã sửa xong)

De lien ket csdl vs render thi can bo sung trong file pom:
        <dependency>
			<groupId>org.springframework.session</groupId>
			<artifactId>spring-session-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>

Va loai bo
        <!-- <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency> -->

Con trong file property thi
trong phan spring.datasource.url = lay link external va chi lay tu phan dpg thoi
bo sung:
    server.tomcat.accesslog.enabled=true
    spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

Đã hoàn thành việc chỉnh sửa lại các liên kết cho tối giản hơn rồi nhưng có vẻ là vẫn không có tác
dụng gì đối với thời gian thực thi chương trình cả, nên sẽ thực hiện cách tiếp cận khác vậy.
Sau khi hoàn thành xong việc giúp chương trình chạy nhanh hơn mình mới bắt đầu tối giản code sau
rồi mới thêm chức năng và giao diện mới.

Khi nao sua xong phan loi hieu nang thi nho phai chinh lai phan tim kiem.

2024-07-30 17:43:37.106 DEBUG 13028 --- [nio-8080-exec-5] org.hibernate.SQL                        : 
    select
        user0_.id_user as id_user1_3_0_,
        user0_.email as email2_3_0_,
        user0_.hoten as hoten3_3_0_,
        user0_.password as password4_3_0_,
        user0_.reset_password_token as reset_pa5_3_0_
    from
        tbl_user user0_
    where
        user0_.id_user=?
Hibernate: 
    select
        user0_.id_user as id_user1_3_0_,
        user0_.email as email2_3_0_,
        user0_.hoten as hoten3_3_0_,
        user0_.password as password4_3_0_,
        user0_.reset_password_token as reset_pa5_3_0_
    from
        tbl_user user0_
    where
        user0_.id_user=?
2024-07-30 17:43:37.148 TRACE 13028 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [BIGINT] - [1]
2024-07-30 17:43:37.182 DEBUG 13028 --- [nio-8080-exec-5] org.hibernate.SQL                        : 
    /* select
        generatedAlias0
    from
        Employee as generatedAlias0
    left join
        generatedAlias0.idpb as generatedAlias1
    left join
        generatedAlias1.iduser as generatedAlias2
    where
        generatedAlias2=:param0
    order by
        generatedAlias0.idnv desc */ select
            employee0_.idnv as idnv1_1_,
            employee0_.anh as anh2_1_,
            employee0_.chucvu as chucvu3_1_,
            employee0_.dantoc as dantoc4_1_,
            employee0_.email as email5_1_,
            employee0_.gt as gt6_1_,
            employee0_.hoten as hoten7_1_,
            employee0_.id_luong as id_luon11_1_,
            employee0_.id_pb as id_pb12_1_,
            employee0_.ngaysinh as ngaysinh8_1_,
            employee0_.quequan as quequan9_1_,
            employee0_.sdt as sdt10_1_
        from
            tbl_employee employee0_
        left outer join
            tbl_department department1_
                on employee0_.id_pb=department1_.id_pb
        left outer join
            tbl_user user2_
                on department1_.id_user=user2_.id_user
        where
            user2_.id_user=?
        order by
            employee0_.idnv desc offset 0 rows fetch next ? rows only
Hibernate: 
    /* select
        generatedAlias0
    from
        Employee as generatedAlias0
    left join
        generatedAlias0.idpb as generatedAlias1
    left join
        generatedAlias1.iduser as generatedAlias2
    where
        generatedAlias2=:param0
    order by
        generatedAlias0.idnv desc */ select
            employee0_.idnv as idnv1_1_,
            employee0_.anh as anh2_1_,
            employee0_.chucvu as chucvu3_1_,
            employee0_.dantoc as dantoc4_1_,
            employee0_.email as email5_1_,
            employee0_.gt as gt6_1_,
            employee0_.hoten as hoten7_1_,
            employee0_.id_luong as id_luon11_1_,
            employee0_.id_pb as id_pb12_1_,
            employee0_.ngaysinh as ngaysinh8_1_,
            employee0_.quequan as quequan9_1_,
            employee0_.sdt as sdt10_1_
        from
            tbl_employee employee0_
        left outer join
            tbl_department department1_
                on employee0_.id_pb=department1_.id_pb
        left outer join
            tbl_user user2_
                on department1_.id_user=user2_.id_user
        where
            user2_.id_user=?
        order by
            employee0_.idnv desc offset 0 rows fetch next ? rows only
2024-07-30 17:43:37.229 TRACE 13028 --- [nio-8080-exec-5] o.h.type.descriptor.sql.BasicBinder      : binding parameter [1] as [BIGINT] - [1]
2024-07-30 17:43:37.913  INFO 13028 --- [nio-8080-exec-5] i.StatisticalLoggingSessionEventListener : Session Metrics 
{
    2474601 nanoseconds spent acquiring 1 JDBC connections;
    0 nanoseconds spent releasing 0 JDBC connections;
    557200 nanoseconds spent preparing 2 JDBC statements;
    51132900 nanoseconds spent executing 2 JDBC statements;
    0 nanoseconds spent executing 0 JDBC batches;
    0 nanoseconds spent performing 0 L2C puts;
    0 nanoseconds spent performing 0 L2C hits;
    0 nanoseconds spent performing 0 L2C misses;
    0 nanoseconds spent executing 0 flushes (flushing a total of 0 entities and 0 collections);
    4401 nanoseconds spent executing 1 partial-flushes (flushing a total of 0 entities and 0 collections)
}