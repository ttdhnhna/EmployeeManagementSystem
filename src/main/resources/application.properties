# spring.datasource.url=jdbc:postgresql://dpg-cqbsfj8gph6c73c6ng1g-a.oregon-postgres.render.com/third_deploy_database
# spring.datasource.username=third_deploy_database_user
# spring.datasource.password=M7CKR6A0QpXTuEEVGNw2dXvcaiacF3f2
# H2 Database configuration
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.datasource.platform=h2
spring.h2.console.enabled=true

#Hibernate
#Hibernate là một lớp có tác dụng giống như một cây cầu giữa các loại Java JDBC và các SQL
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLServer2012Dialect
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true

spring.datasource.hikari.auto-commit=false
management.endpoints.web.exposure.include=*
#Hibernate auto ddl: giúp khởi tạo dữ liệu ban đầu khi khởi động spring boot.
spring.jpa.hibernate.ddl-auto=update
server.tomcat.accesslog.enabled=true

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.generate_statistics=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.jcache.JCacheRegionFactory
spring.jpa.properties.javax.cache.provider=org.ehcache.jsr107.EhcacheCachingProvider
spring.jpa.properties.javax.cache.uri=classpath:ehcache.xml

spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5

# spring.jpa.hibernate.ddl-auto là một tính năng Hibernate kiểm soát hành vi theo cách chi tiết hơn.
# update: Mô hình đối tượng được tạo dựa trên việc ánh xạ (thông qua các annotation hoặc XML) được 
# so sánh với dữ liệu hiện có trong schema và sau đó Hibernate sẽ cập nhật lại schema với những thông tin mới. 
# Nó sẽ không bao giờ xóa đi các bảng hay các cột đang có ngay cả khi chúng không còn được ứng dụng của ta yêu cầu nữa
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=19a10010039@students.hou.edu.vn
spring.mail.password=tgoz iuzk kmfl apyi
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

